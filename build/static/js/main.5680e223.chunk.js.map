{"version":3,"sources":["assets/home2.png","util/constants.js","components/Home.js","util/index.js","util/stor.js","contract/metadata.js","contract/deploy.js","components/FileDropzone/FileDropzone.js","util/ceramic.js","assets/logo.png","components/CreateSalespage.js","util/covalent.js","components/History.js","util/web3util.js","assets/icon.png","util/coins.js","components/Invoice/Invoice.js","util/nftport.js","components/Salespage.js","App.js","reportWebVitals.js","index.js"],"names":["COVALENT_KEY","process","NFT_PORT_KEY","INFURA_ID","APP_NAME","APP_DESC","CONNECT_PROMPT","CHAIN_OPTIONS","name","url","id","ACTIVE_CHAIN","Object","keys","EXAMPLE_FORM","title","paymentAddress","files","console","log","CHECKLIST_ITEMS","Home","account","navigate","useNavigate","className","span","items","map","item","i","CheckCircleTwoTone","twoToneColor","type","size","onClick","src","logo","ipfsUrl","cid","fileName","createItemString","quantity","join","salespageUrl","window","location","origin","capitalize","string","charAt","toUpperCase","slice","replace","abbreviate","s","substr","getExplorerUrl","hash","useTx","getDateStringFromTimestamp","ts","showTime","d","Date","toLocaleDateString","toLocaleTimeString","col","k","render","dataIndex","key","WEI_PER_UNIT","Math","pow","bytesToSize","bytes","parseInt","floor","round","isEmpty","length","formatter","Intl","NumberFormat","style","currency","formatMoney","format","API_KEY","makeStorageClient","Web3Storage","token","storeFiles","client","put","fetchMetadata","axios","get","SALESPAGE_CONTRACT","deployContract","provider","signerAddress","factory","ethers","ContractFactory","getSigner","validatedAddress","utils","getAddress","deploy","contract","deployed","address","completePurchase","contractAddress","pageId","amountEth","salespageContract","Contract","itemString","value","parseEther","toString","options","result","thumbsContainer","display","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","marginRight","thumbInner","minWidth","overflow","FileDropzone","setFiles","updateInfo","info","useDropzone","onDrop","acceptedFiles","file","assign","preview","URL","createObjectURL","getRootProps","getInputProps","thumbs","fileInfo","updateFileInfo","addonBefore","placeholder","onChange","e","target","useEffect","forEach","revokeObjectURL","noFiles","image","imageStyle","height","description","ceramic","CeramicClient","resolver","KeyDidResolver","getResolver","ThreeIdResolver","did","DID","threeIdConnect","ThreeIdConnect","initCeramic","authProvider","EthereumAuthProvider","ethereum","connect","getDidProvider","setProvider","authenticate","createStream","data","TileDocument","create","doc","streamId","content","loadStream","load","Step","Steps","CreateSalespage","useState","setData","error","setError","loading","setLoading","setResult","updateData","isValidData","addr","validAddress","isValid","undefined","body","x","res","f","path","blob","Blob","JSON","stringify","metadataFile","File","allFiles","message","direction","current","prefix","disabled","status","subTitle","extra","href","contractUrl","getTransactions","chainId","Option","Select","History","props","setAddress","setChainId","currentAddress","fetchHistory","alert","currentChain","cols","row","record","_","toLowerCase","align","defaultValue","width","v","cId","dataSource","filter","columns","onRow","rowIndex","event","open","tx_hash","onDoubleClick","onContextMenu","onMouseEnter","onMouseLeave","providerOptions","walletconnect","package","WalletConnectProvider","bridge","infuraId","rpc","getRates","DEMO_NUMBER","now","random","substring","Invoice","storeName","paid","ref","createdAt","logoUrl","pay","invoiceNumber","rates","setRates","total","useMemo","usd","reduce","a","b","fetchRates","amountString","ethString","MATIC","cellPadding","cellSpacing","colSpan","maxWidth","placement","itemName","toFixed","loadImage","config","method","responseType","request","response","createReceiptNft","ownerAddress","imageUrl","params","chain","mint_to_address","formData","FormData","lastModified","append","headers","Authorization","Salespage","login","logout","useParams","cartItems","setCartItems","modifierText","setModifierText","activeItem","setActiveItem","showInvoice","setShowInvoice","fetchData","streamData","completePayment","itemsToPurchase","nftResults","modifyQuantity","amount","imgUrl","pageTitle","activeItems","values","noItems","storeLogo","salespageLogo","InfoCircleOutlined","modifier","cover","alt","actions","MinusCircleFilled","PlusCircleFilled","visible","okText","onCancel","onOk","Header","Layout","Content","Footer","web3Modal","Web3Modal","network","cacheProvider","theme","App","setAccount","checkOnInit","cachedProvider","instance","p","providers","Web3Provider","listAccounts","accounts","clearCachedProvider","isCheckout","indexOf","mode","defaultSelectedKeys","Item","preventDefault","padding","element","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5680e223.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/home2.4c0d795c.png\";","export const COVALENT_KEY = process.env.REACT_APP_COVALENT_KEY; // covalent api key\nexport const NFT_PORT_KEY = process.env.REACT_APP_NFT_PORT_KEY; // nft port key\nexport const INFURA_ID = process.env.REACT_APP_SALESPAGE_INFURA_ID; //Infura ID\n\nexport const APP_NAME = \"Salespage\";\nexport const APP_DESC = \"A Point of Sale platform built on Polygon and IPFS\"\nexport const SALESPAGE_DETAIL = \"A Salespage is a gateway url you can have displayed on tablets or screens in your store or retail space. Customers will be able complete purchases from this page fully self-service.\"\n\nexport const CONNECT_PROMPT = 'Connect Wallet'\n\nexport const CHAIN_OPTIONS = {\n  80001: {\n    name: \"Mumbai\",\n    url: \"https://mumbai.polygonscan.com/\",\n    id: 80001,\n  },\n  137: {\n    name: \"Matic Mainnet\",\n    url: \"https://polygonscan.com/\",\n    id: 137,\n  },\n};\n\nexport const DEMO_ITEMS = [\n  {\n    'name': 'Burrito',\n    'usd': '8.99',\n    'modifier': 'add cheese'\n  },\n  {\n    'name': 'Chips',\n    'usd': '1.99',\n    'modifier': ''\n  },\n  {\n    'name': 'Soda',\n    'usd': '1.99',\n    'modifier': ''\n  },\n]\n\nexport const CHAIN_IDS = Object.keys(CHAIN_OPTIONS)\n\n// 1: { name: \"ethereum\", url: \"https://etherscan.io/tx/\", id: 1 },\n// 42: { name: \"kovan\", url: \"https://kovan.etherscan.io/tx/\", id: 42 },\n// 4: { name: \"rinkeby\", url: \"https://rinkeby.etherscan.io/tx/\", id: 4 },\n\nexport const ACTIVE_CHAIN = CHAIN_OPTIONS[\"80001\"];\n\nexport const EXAMPLE_FORM = {\n  title: \"My restaurant\",\n  paymentAddress: \"0xD7e02fB8A60E78071D69ded9Eb1b89E372EE2292\",\n  files: [],\n};\n\nexport const IPFS_BASE_URL = \"https://ipfs.io/ipfs\"\n\nconsole.log(\"config\", INFURA_ID, COVALENT_KEY, NFT_PORT_KEY, ACTIVE_CHAIN);\n","import React from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport logo from \"../assets/home2.png\";\nimport ReactRotatingText from \"react-rotating-text\";\nimport { useNavigate } from \"react-router-dom\";\nimport { APP_DESC, APP_NAME, CONNECT_PROMPT } from \"../util/constants\";\nimport { CheckCircleOutlined, CheckCircleTwoTone } from \"@ant-design/icons\";\n\n\nconst CHECKLIST_ITEMS = [\n  \"Create instant point of sale pages with no minimum fees.\",\n  \"Each page is managed by its own dedicated smart contract.\",\n  \"Every receipt generated as an NFT.\",\n];\n\nfunction Home({account}) {\n  const navigate = useNavigate();\n\n  const goToCreate = () => {\n    navigate(\"/create\");\n  };\n\n  return (\n    <div className=\"hero-section\">\n      <Row>\n        <Col span={12}>\n          <div className=\"hero-slogan-section\">\n            <div className=\"hero-slogan\">\n              <p>\n                {APP_DESC} for&nbsp;\n                <ReactRotatingText\n                  items={[\"businesses\", \"restaurants\", \"retail\"]}\n                />\n                .\n              </p>\n            </div>\n            {/* // \"#eb2f96\" */}\n            {CHECKLIST_ITEMS.map((item, i) => {\n              return (\n                <p>\n                  <CheckCircleTwoTone twoToneColor=\"#00aa00\" />\n                  &nbsp;\n                  {item}\n                </p>\n              );\n            })}\n            <br />\n\n            <Button type=\"primary\" size=\"large\" onClick={goToCreate}>\n              {account ? 'Create salespage request' : CONNECT_PROMPT}\n            </Button>\n          </div>\n        </Col>\n        <Col span={12}>\n          <div className=\"centered\">\n          <img src={logo} className=\"hero-image\" />\n          <p><i>An example checkout page dynamically created by {APP_NAME}.</i></p>\n        </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nHome.propTypes = {};\n\nexport default Home;\n","import { ACTIVE_CHAIN, IPFS_BASE_URL } from \"./constants\";\n\nexport const ipfsUrl = (cid, fileName) => {\n  // let url = `https://ipfs.io/ipfs/${cid}`;\n  let url = `${IPFS_BASE_URL}/${cid}`;\n  if (fileName) {\n    return `${url}/${fileName}`;\n  }\n  return url;\n};\n\nexport const createItemString = (items) => {\n  return items.map(item => `${item.name}x${item.quantity || 1}`).join(', ')\n}\n\nexport const salespageUrl = (cid) => `${window.location.origin}/#/page/${cid}`;\n\nexport function capitalize(string) {\n  return (string.charAt(0).toUpperCase() + string.slice(1)).replace('_', ' ')\n}\n\nexport const abbreviate = s => s ? `${s.substr(0, 6)}**` : ''\n\nexport const getExplorerUrl = (hash, useTx) =>\n  `${ACTIVE_CHAIN.url}${useTx ? \"tx/\" : \"address/\"}${hash}`;\n\nexport const createJsonFile = (signload, fileName) => {\n  const st = JSON.stringify(signload);\n  const blob = new Blob([st], { type: \"application/json\" });\n  const fileData = new File([blob], fileName);\n  return fileData;\n};\n\nexport const getDateStringFromTimestamp = (ts, showTime) => {\n  const d = new Date(ts);\n  if (showTime) {\n    return `${d.toLocaleDateString()} ${d.toLocaleTimeString()}`;\n  }\n  return d.toLocaleDateString();\n};\n\nexport const col = (k, render) => ({\n  title: capitalize(k),\n  dataIndex: k,\n  key: k,\n  render,\n});\n\nconst WEI_PER_UNIT=Math.pow(10,18)\n\nexport const getHistoryColumns = (currentAddress) => {\n  return [\n    col(\"type\", (row, record, _) => {\n      console.log('rec', record)\n      return record['to_address']?.toLowerCase() === currentAddress?.toLowerCase() ? 'Inbound (Revenue)' : 'Outbound (Deduction)'\n    }),\n    col(\"tx_hash\", (row) => abbreviate(row)),\n    col(\"from_address\", (row) => abbreviate(row)),\n    col(\"value\", row => row/WEI_PER_UNIT),\n    col(\"block_signed_at\",\n      (row) =>\n        `${new Date(row).toLocaleDateString()} ${new Date(\n          row\n        ).toLocaleTimeString()}`\n    ),\n  ]\n};\n\n\nexport function bytesToSize(bytes) {\n  var sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n  if (bytes == 0) return \"0 Byte\";\n  var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n  return Math.round(bytes / Math.pow(1024, i), 2) + \" \" + sizes[i];\n}\n\nexport const isEmpty = s => !s || s.length === 0\n\nconst formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  // These options are needed to round to whole numbers if that's what you want.\n  //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n  //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n});\n\nexport function formatMoney(s) {\n  if (!s) {\n    return 'Free'\n  }\n\n  return formatter.format(s)\n}\n","// import { Web3Storage } from \"web3.storage\";\nimport axios from \"axios\";\nimport { Web3Storage } from \"web3.storage/dist/bundle.esm.min.js\"; // webpack 4\n\nconst API_KEY = process.env.REACT_APP_STORAGE_KEY;\nif (!API_KEY) {\n  alert('REACT_APP_STORAGE_KEY environment variable is required')\n}\n\nfunction getAccessToken() {\n  return API_KEY;\n}\n\nfunction makeStorageClient() {\n  return new Web3Storage({ token: getAccessToken() });\n}\n\nexport const ipfsUrl = (cid, fileName) => {\n    let url = `https://ipfs.io/ipfs/${cid}`;\n    if (fileName) {\n      return `${url}/${fileName}`;\n    }\n    return url;\n  };\n\n\nexport async function storeFiles(files) {\n  console.log('store', files)\n  const client = makeStorageClient();\n  const cid = await client.put(files);\n  console.log(\"stored files with cid:\", cid);\n  return cid;\n}\n\nexport function fetchMetadata(cid) {\n  const url = `${ipfsUrl(cid)}/metadata.json`\n  return axios.get(url)\n}\n\nexport async function retrieveFiles(cid) {\n  const client = makeStorageClient();\n  const res = await client.get(cid);\n  console.log(`Got a response! [${res.status}] ${res.statusText}`);\n  if (!res.ok) {\n    throw new Error(`failed to get ${cid}`);\n  }\n\n  // request succeeded! do something with the response object here...\n\n  return res;\n}\n","export const SALESPAGE_CONTRACT = {\n  \"_format\": \"hh-sol-artifact-1\",\n  \"contractName\": \"Salespage\",\n  \"sourceName\": \"contracts/Salespage.sol\",\n  \"abi\": [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_title\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_paymentAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"previousOwner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"newOwner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"OwnershipTransferred\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"address\",\n          \"name\": \"payer\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"string\",\n          \"name\": \"items\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"PurchaseCompleted\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_items\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"completePurchase\",\n      \"outputs\": [],\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getTitle\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"owner\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"renounceOwnership\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_paymentAddress\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"setPaymentAddress\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"toggleOpen\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"newOwner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"transferOwnership\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ],\n  \"bytecode\": \"\",\n  \"deployedBytecode\": \"0x6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b146100e5578063a7b7229414610110578063f2fde38b1461013b578063ff3c1a8f1461016457610070565b80635e1e100414610075578063715018a6146100b25780637bea1b78146100c9575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610874565b61018f565b6040516100a991906109ad565b60405180910390f35b3480156100be57600080fd5b506100c7610278565b005b6100e360048036038101906100de919061089d565b610300565b005b3480156100f157600080fd5b506100fa6103f6565b60405161010791906109ad565b60405180910390f35b34801561011c57600080fd5b5061012561041f565b6040516101329190610a06565b60405180910390f35b34801561014757600080fd5b50610162600480360381019061015d9190610874565b6104dc565b005b34801561017057600080fd5b506101796105d4565b6040516101869190610a21565b60405180910390f35b6000610199610702565b73ffffffffffffffffffffffffffffffffffffffff166101b76103f6565b73ffffffffffffffffffffffffffffffffffffffff161461020d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020490610aba565b60405180910390fd5b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610280610702565b73ffffffffffffffffffffffffffffffffffffffff1661029e6103f6565b73ffffffffffffffffffffffffffffffffffffffff16146102f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102eb90610aba565b60405180910390fd5b6102fe600061070a565b565b600260149054906101000a900460ff1661034f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034690610a9a565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156103b7573d6000803e3d6000fd5b507fb9037037fccac7d3b578a7164261dca7897caac8c04cc5ebd5063ffec69fe6a13334836040516103eb939291906109c8565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610429610702565b73ffffffffffffffffffffffffffffffffffffffff166104476103f6565b73ffffffffffffffffffffffffffffffffffffffff161461049d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049490610aba565b60405180910390fd5b600260149054906101000a900460ff1615600260146101000a81548160ff021916908315150217905550600260149054906101000a900460ff16905090565b6104e4610702565b73ffffffffffffffffffffffffffffffffffffffff166105026103f6565b73ffffffffffffffffffffffffffffffffffffffff1614610558576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054f90610aba565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bf90610a7a565b60405180910390fd5b6105d18161070a565b50565b6060600180546105e390610bd6565b80601f016020809104026020016040519081016040528092919081815260200182805461060f90610bd6565b801561065c5780601f106106315761010080835404028352916020019161065c565b820191906000526020600020905b81548152906001019060200180831161063f57829003601f168201915b5050505050905090565b6106fe828260405160240161067c929190610a43565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506107ce565b5050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600061080a61080584610aff565b610ada565b90508281526020810184848401111561082257600080fd5b61082d848285610b94565b509392505050565b60008135905061084481610d6f565b92915050565b600082601f83011261085b57600080fd5b813561086b8482602086016107f7565b91505092915050565b60006020828403121561088657600080fd5b600061089484828501610835565b91505092915050565b6000602082840312156108af57600080fd5b600082013567ffffffffffffffff8111156108c957600080fd5b6108d58482850161084a565b91505092915050565b6108e781610b4c565b82525050565b6108f681610b5e565b82525050565b600061090782610b30565b6109118185610b3b565b9350610921818560208601610ba3565b61092a81610c97565b840191505092915050565b6000610942602683610b3b565b915061094d82610ca8565b604082019050919050565b6000610965602883610b3b565b915061097082610cf7565b604082019050919050565b6000610988602083610b3b565b915061099382610d46565b602082019050919050565b6109a781610b8a565b82525050565b60006020820190506109c260008301846108de565b92915050565b60006060820190506109dd60008301866108de565b6109ea602083018561099e565b81810360408301526109fc81846108fc565b9050949350505050565b6000602082019050610a1b60008301846108ed565b92915050565b60006020820190508181036000830152610a3b81846108fc565b905092915050565b60006040820190508181036000830152610a5d81856108fc565b90508181036020830152610a7181846108fc565b90509392505050565b60006020820190508181036000830152610a9381610935565b9050919050565b60006020820190508181036000830152610ab381610958565b9050919050565b60006020820190508181036000830152610ad38161097b565b9050919050565b6000610ae4610af5565b9050610af08282610c08565b919050565b6000604051905090565b600067ffffffffffffffff821115610b1a57610b19610c68565b5b610b2382610c97565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610b5782610b6a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610bc1578082015181840152602081019050610ba6565b83811115610bd0576000848401525b50505050565b60006002820490506001821680610bee57607f821691505b60208210811415610c0257610c01610c39565b5b50919050565b610c1182610c97565b810181811067ffffffffffffffff82111715610c3057610c2f610c68565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f53746f72652069732063757272656e746c79206e6f7420616363657074696e6760008201527f206f726465727321000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610d7881610b4c565b8114610d8357600080fd5b5056fea2646970667358221220c93e91f8422e66d211f7a81db89befde0fc4c7fb3040677f7321cb607846c0e164736f6c63430008040033\",\n  \"linkReferences\": {},\n  \"deployedLinkReferences\": {}\n}\n","import { ethers } from \"ethers\";\nimport { createItemString } from \"../util\";\nimport { SALESPAGE_CONTRACT } from \"./metadata\";\n\n\n// https://dapp-world.com/smartbook/how-to-use-ethers-with-polygon-k5Hn\nexport async function deployContract(provider, title, signerAddress) {\n\n  //   https://dev.to/yosi/deploy-a-smart-contract-with-ethersjs-28no\n\n  // Create an instance of a Contract Factory\n  const factory = new ethers.ContractFactory(\n    SALESPAGE_CONTRACT.abi,\n    SALESPAGE_CONTRACT.bytecode,\n    provider.getSigner()\n  );\n\n  const validatedAddress = ethers.utils.getAddress(signerAddress);\n\n  // Start deployment, returning a promise that resolves to a contract object\n  const contract = await factory.deploy(title, validatedAddress);\n  await contract.deployed();\n  console.log(\"Contract deployed to address:\", contract.address);\n  return contract;\n}\n\nexport const validAddress = (addr) => {\n  try {\n    ethers.utils.getAddress(addr);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nexport const completePurchase = async (provider, contractAddress, pageId, items, amountEth) => {\n  if (!contractAddress || !items) {\n    return {};\n  }\n\n  const salespageContract = new ethers.Contract(\n    contractAddress,\n    SALESPAGE_CONTRACT.abi,\n    provider.getSigner()\n  );\n\n  const itemString = createItemString(items)\n  const value =  ethers.utils.parseEther(amountEth.toString())\n  console.log('complete purchase', itemString, value, pageId, contractAddress, amountEth)\n  const options = {value}\n  const result = await salespageContract.completePurchase(itemString, options);\n  return result;\n};\n","import { Input, Empty} from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { bytesToSize, isEmpty } from \"../../util\";\n\nconst thumbsContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  marginTop: 16,\n};\n\nconst thumb = {\n  display: \"inline-flex\",\n  borderRadius: 2,\n  border: \"1px solid #eaeaea\",\n  marginBottom: 8,\n  marginRight: 8,\n  borderRadius: '5px',\n  width: 400,\n  textAlign: \"left\",\n  height: 230,\n  overflow: \"hidden\",\n  padding: 4,\n  paddingTop: 8,\n  boxSizing: \"border-box\",\n};\n\nconst thumbInner = {\n  display: \"flex\",\n  minWidth: 0,\n  overflow: \"hidden\",\n};\n\nconst img = {\n  display: \"block\",\n  width: \"auto\",\n  height: \"100%\",\n};\n\nexport function FileDropzone({ files, setFiles, updateInfo, info }) {\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop: acceptedFiles => {\n      console.log(\"files\", acceptedFiles);\n      setFiles(\n        acceptedFiles.map(file =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          }),\n        ),\n      );\n    },\n  });\n\n  const thumbs = files.map(file => {\n    const fileInfo = info[file.name] || {};\n    const updateFileInfo = (key, value) => {\n      updateInfo(file.name, {...fileInfo, [key]: value });\n    };\n    return (\n      <div style={thumb} key={file.name}>\n        <div style={thumbInner}>\n          <p>\n            <img src={file.preview} className=\"preview-image\" />\n            <b>{file.name}</b>\n            <br />\n            {file.size && (\n              <span>\n                Size: {bytesToSize(file.size)}\n                <br />\n              </span>\n            )}\n            {file.type && <span>Type: {file.type}</span>}\n\n            <Input\n              addonBefore={\"Name: \"}\n              placeholder=\"Enter item name\"\n              value={fileInfo['name']}\n              onChange={e => updateFileInfo('name', e.target.value)}\n            />\n            <Input\n              addonBefore={\"Description: \"}\n              placeholder=\"Enter description\"\n              value={fileInfo['description']}\n              onChange={e => updateFileInfo('description', e.target.value)}\n            />\n            <Input\n              addonBefore={\"Price (USD): \"}\n              placeholder=\"Enter decimal price in USD\"\n              value={fileInfo['usd']}\n              onChange={e => updateFileInfo('usd', e.target.value)}\n            />\n          </p>\n        </div>\n      </div>\n    );\n  });\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach(file => URL.revokeObjectURL(file.preview));\n    },\n    [files],\n  );\n\n  const noFiles = isEmpty(files)\n\n  return (\n    <section>\n      <div {...getRootProps({ className: \"dropzone\" })}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      </div>\n      <br/>\n      {!noFiles && <h3>Items</h3>}\n      {noFiles && <div>\n        <Empty\n          image=\"https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg\"\n          imageStyle={{\n            height: 60,\n          }}\n          description={<span><h4>No items!</h4>Get started by uploading an image of your first item.</span>}\n      /></div>}\n      <aside style={thumbsContainer}>{thumbs}</aside>\n    </section>\n  );\n}","import { ThreeIdConnect, EthereumAuthProvider } from \"@3id/connect\";\nimport KeyDidResolver from \"key-did-resolver\";\nimport ThreeIdResolver from \"@ceramicnetwork/3id-did-resolver\";\nimport { TileDocument } from \"@ceramicnetwork/stream-tile\";\nimport { CeramicClient } from '@ceramicnetwork/http-client'\nimport { DID } from \"dids\";\n\n// https://developers.ceramic.network/run/nodes/community-nodes/\nconst TEST_API_URL = \"https://gateway-clay.ceramic.network\";\nconst ceramic = new CeramicClient(TEST_API_URL);\n\n// https://developers.ceramic.network/build/javascript/http/\n\nconst resolver = { ...KeyDidResolver.getResolver(), ...ThreeIdResolver.getResolver(ceramic) };\nconst did = new DID({ resolver });\n\nceramic.did = did;\n\nconst threeIdConnect = new ThreeIdConnect();\n\nexport const initCeramic = async address => {\n  console.log(\"initCeramic\", address);\n  // https://developers.ceramic.network/authentication/3id-did/3id-connect/#installation\n  const authProvider = new EthereumAuthProvider(window.ethereum, address);\n  await threeIdConnect.connect(authProvider);\n\n  const provider = await threeIdConnect.getDidProvider();\n  ceramic.did.setProvider(provider);\n\n  await ceramic.did.authenticate();\n};\n\n// TODO: add stream query methods for storing storefront metadata with IPFS resources.\n// https://developers.ceramic.network/build/javascript/quick-start/\n\nexport const createStream = async data => {\n  // data: JSON payload data\n  const doc = await TileDocument.create(ceramic, data);\n\n  const streamId = doc.id.toString();\n  console.log(\"create\", streamId, doc.content);\n  return streamId;\n};\n\nexport const loadStream = async streamId => {\n  // Stream id: identifier for the stream (using cid or stream identifier).\n\n  const doc = await TileDocument.load(ceramic, streamId);\n\n  console.log(doc.content);\n  return doc.content;\n};\n\n// TODO: update stream.","export default __webpack_public_path__ + \"static/media/logo.5c39ba33.png\";","import React, { useState } from \"react\";\nimport { Button, Input, Row, Col, Radio, Steps, Result } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { salespageUrl, ipfsUrl, getExplorerUrl } from \"../util\";\nimport { APP_NAME, EXAMPLE_FORM, SALESPAGE_DETAIL } from \"../util/constants\";\nimport { storeFiles } from \"../util/stor\";\nimport { deployContract, validAddress } from \"../contract/deploy\";\nimport { FileDropzone } from \"./FileDropzone/FileDropzone\";\nimport { createStream } from \"../util/ceramic\";\nimport logo from '../assets/logo.png'\n\nconst { Step } = Steps;\n\nfunction CreateSalespage({provider}) {\n  const [data, setData] = useState({ ...EXAMPLE_FORM });\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState();\n\n  const updateData = (key, value) => {\n    setData({ ...data, [key]: value });\n  };\n\n  const isValid = (data) => {\n    return (\n      data.title &&\n      data.files.length > 0 &&\n      validAddress(data.paymentAddress)\n    );\n  };\n  const isValidData = isValid(data);\n\n  const create = async () => {\n    setError(undefined);\n\n    if (!isValidData) {\n      setError(\n        \"Please provide a store name, valid address, and at least one file.\"\n      );\n      return;\n    }\n\n    setLoading(true);\n    const body = { ...data };\n\n    // Format files for upload.\n    const files = body.files.map((x) => {\n      return x;\n    });\n\n    let res = { ...data };\n\n    try {\n      // 1) deploy base contract with metadata,\n      const contract = await deployContract(provider, data.title, data.paymentAddress);\n      res[\"address\"] = contract.address\n      res[\"files\"] = files.map(f => f.path)\n\n      // 2) Create stream\n      const streamId = await createStream(res);\n      res['streamId'] = streamId;\n\n      const blob = new Blob([JSON.stringify({streamId})], { type: 'application/json' })\n      const metadataFile = new File([blob], 'metadata.json')\n      const allFiles = [...files, metadataFile]\n\n      // 3) Upload files to ipfs,\n      const cid = await storeFiles(allFiles);\n      res['cid'] = cid;\n\n      // 4) return shareable url.\n      res[\"salespageUrl\"] = salespageUrl(cid); // Could use stream or cid.\n      res[\"contractUrl\"] = getExplorerUrl(res.address);\n\n      // Result rendered after successful doc upload + contract creation.\n      setResult(res);\n      try {\n        // await postPacket(res.salespage request);\n      } catch (e) {\n        console.error(\"error posting salespage request\", e);\n      }\n    } catch (e) {\n      console.error(\"error creating salespage request\", e);\n      setError(e.message || e.toString())\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getStep = () => {\n    if (!!result) {\n      return 2;\n    } else if (isValidData) {\n      return 1;\n    }\n    return 0;\n  };\n\n  return (\n    <div>\n      <Row>\n        <Col span={24}>\n        <div>\n          <div className=\"centered create-detail\">\n            <img src={logo} className='create-logo'/>\n            <h1 className=\"centered\">Create Salespage</h1>\n            <p>{SALESPAGE_DETAIL}</p>\n  </div>\n          <br/>\n          <br/>\n            <Steps\n              className=\"standard-margin\"\n              direction=\"horizontal\"\n              size=\"small\"\n              current={getStep()}\n            >\n              <Step title=\"Fill in fields\" description=\"Enter required data.\" />\n              <Step\n                title=\"Create salespage\"\n                description=\"Requires authorizing a create Salespage contract transaction.\"\n              />\n              <Step\n                title=\"Done\"\n                description=\"Your salespage will be live for others to view and complete purchases.\"\n              />\n            </Steps>\n          </div>\n          <br/>\n        </Col>\n      </Row>\n      <Row>\n        \n        <Col span={24}>\n       \n          {!result && <div className=\"create-form white boxed\">\n\n            {/* <h2>Create new salespage request</h2> */}\n            <br />\n\n            <h3 className=\"vertical-margin\">Store name:</h3>\n            <Input\n              placeholder=\"Name of the Salespage\"\n              value={data.title}\n              prefix=\"Name: \"\n              onChange={(e) => updateData(\"title\", e.target.value)}\n            />\n            {/* <TextArea\n              aria-label=\"Description\"\n              onChange={(e) => updateData(\"description\", e.target.value)}\n              placeholder=\"Description of the salespage request\"\n              prefix=\"Description\"\n              value={data.description}\n            /> */}\n\n            {/* TODO: add configurable amount of items */}\n            <h3 className=\"vertical-margin\">Declare products:</h3>\n            <FileDropzone\n              info={data}\n              updateInfo={updateData}\n              files={data.files}\n              setFiles={(files) => updateData(\"files\", files)}\n            />\n\n            <h3 className=\"vertical-margin\">Enter payment address:</h3>\n            <p>\n              Enter payment address for this {APP_NAME}. Defaults to current address.\n            </p>\n            <Input\n              placeholder=\"Payment address\"\n              value={data.paymentAddress}\n              prefix=\"Payment Address: \"\n              onChange={(e) => updateData(\"paymentAddress\", e.target.value)}\n            />\n            <br />\n\n            <Button\n              type=\"primary\"\n              className=\"standard-button\"\n              onClick={create}\n              disabled={loading} // || !isValidData}\n              loading={loading}\n            >\n              Create {APP_NAME}!\n            </Button>\n            {!error && !result && loading && (\n              <span>&nbsp;Note this may take a few moments.</span>\n            )}\n            {error && <div className=\"error-text\">{error}</div>}\n            </div>}\n            {result && (\n              <div>\n                {/* https://ant.design/components/result/ */}\n                <Result\n                  status=\"success\"\n                  title={`Created ${APP_NAME}`}\n                  subTitle=\"See below for information\"\n                  extra={[\n                    <Button href={result.salespageUrl} type=\"primary\" key=\"console\">\n                      Open {APP_NAME}\n                    </Button>,\n                    <Button href={ipfsUrl(result.cid)} key=\"metadata\">View metadata</Button>,\n                    <Button href={result.contractUrl} key=\"contract\">View contract</Button>,\n                  ]}\n                />\n              </div>\n            )}\n        </Col>\n        <Col span={1}></Col>\n        <Col span={7}>\n          \n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nCreateSalespage.propTypes = {};\n\nexport default CreateSalespage;\n","import axios from \"axios\";\nimport { COVALENT_KEY } from \"./constants\";\n\n// Fetch transactions against a given Salespage owner address (measures activity).\nexport const getTransactions = (chainId, address) => {\n  const url = `https://api.covalenthq.com/v1/${chainId}/address/${address}/transactions_v2/?&key=${COVALENT_KEY}`;\n  return axios.get(url);\n};\n\n// Fetch historic balances for a given Salespage owner address (measures performance).\nexport const getBalances = (chainId, address) => {\n  const url = `https://api.covalenthq.com/v1/${chainId}/address/${address}/portfolio_v2/?&key=${COVALENT_KEY}`;\n  return axios.get(url);\n}","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Input, Select, Table } from \"antd\";\nimport { ACTIVE_CHAIN, APP_NAME, CHAIN_OPTIONS } from \"../util/constants\";\nimport { getTransactions } from \"../util/covalent\";\nimport { capitalize, getHistoryColumns, HISTORY_COLUMNS} from \"../util\";\n\nimport logo from '../assets/logo.png'\n\nconst { Option } = Select;\n\n\nfunction History(props) {\n  const [address, setAddress] = useState(\n    \"0xD7e02fB8A60E78071D69ded9Eb1b89E372EE2292\"\n  );\n  const [chainId, setChainId] = useState(ACTIVE_CHAIN.id + \"\");\n  const [loading, setLoading] = useState();\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    setData(undefined)\n  }, [chainId])\n\n  const fetchHistory = async () => {\n    if (!address || !chainId) {\n      alert(\"Address and chainId are required\");\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const res = await getTransactions(chainId, address);\n      setData(res.data.data.items);\n    } catch (e) {\n      console.error(e);\n      alert(\"error getting signdata\" + e);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const currentChain = CHAIN_OPTIONS[chainId];\n  const cols = getHistoryColumns(address);\n\n  return (\n    <div>\n      <div align='center'>\n        <img className=\"history-logo\" src={logo}/>\n        <p>\n          This page can be used to lookup {APP_NAME} transactions given a store owner address\n          on <b>{currentChain.name}</b>.\n        </p>\n        <br/>\n        <br/>\n      </div>\n      <Input\n        value={address}\n        onChange={(e) => setAddress(e.target.value)}\n        prefix=\"Address\"\n      ></Input>\n      <br />\n      <p></p>\n      <Select\n        defaultValue={chainId}\n        style={{ width: 120 }}\n        onChange={(v) => setChainId(v)}\n      >\n        {Object.keys(CHAIN_OPTIONS).map((cId, i) => {\n          return (\n            <Option key={i} value={cId}>\n              {capitalize(CHAIN_OPTIONS[cId].name)}\n            </Option>\n          );\n        })}\n      </Select>\n      &nbsp;\n      <Button onClick={fetchHistory} disabled={loading} loading={loading}>\n        View transactions\n      </Button>\n      <br />\n      <hr />\n      {data && (\n        <div>\n          <h1>Transaction History</h1>\n          <Table\n            dataSource={data.filter(d => d.value > 0)}\n            columns={cols}\n            className=\"pointer\"\n            onRow={(record, rowIndex) => {\n              return {\n                onClick: (event) => {\n                  console.log(\"event\", event.target.value);\n                  window.open(\n                    `${currentChain.url}tx/${record.tx_hash}`,\n                    \"_blank\"\n                  );\n                }, // click row\n                onDoubleClick: (event) => {}, // double click row\n                onContextMenu: (event) => {}, // right button click row\n                onMouseEnter: (event) => {}, // mouse enter row\n                onMouseLeave: (event) => {}, // mouse leave row\n              };\n            }}\n          />\n          ;\n        </div>\n      )}\n    </div>\n  );\n}\n\nHistory.propTypes = {};\n\nexport default History;","import WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Web3Modal from \"web3modal\";\nimport { INFURA_ID } from \"./constants\";\n\nconst providerOptions = {\n    walletconnect: {\n        package: WalletConnectProvider, // required\n        options: {\n          bridge: \"https://polygon.bridge.walletconnect.org\",\n          infuraId: INFURA_ID,\n          rpc: {\n            10: \"https://mainnet.optimism.io\", // xDai\n            100: \"https://rpc.gnosischain.com\", // xDai\n            137: \"https://polygon-rpc.com\",\n            31337: \"http://localhost:8545\",\n            42161: \"https://arb1.arbitrum.io/rpc\",\n            80001: \"https://rpc-mumbai.maticvigil.com\",\n            71401: \"https://godwoken-testnet-v1.ckbapp.dev\",\n          },\n        },\n      },\n};\n\nexport const web3ModalSetup = () =>\n  new Web3Modal({\n    network: \"mainnet\", // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\n    cacheProvider: true, // optional\n    theme: \"light\", // optional. Change to \"dark\" for a dark theme.\n    providerOptions\n  })\n\n\n","export default __webpack_public_path__ + \"static/media/icon.b53b9bd2.png\";","import axios from \"axios\"\n\n// {\n//     \"BTC\": 0.05556,\n//     \"USD\": 1159.16,\n//     \"EUR\": 1138.07\n// }\nexport function getRates() {\n    const url = 'https://min-api.cryptocompare.com/data/price?fsym=USD&tsyms=BTC,ETH,EUR,MATIC'\n    return axios.get(url)\n}\n","import { CheckCircleTwoTone } from \"@ant-design/icons\";\nimport { Button, Tooltip, Modal, Input, Result } from \"antd\";\nimport React, { useState, useMemo, useEffect } from \"react\";\nimport logo from \"../../assets/logo.png\";\nimport { abbreviate, formatMoney, getDateStringFromTimestamp } from \"../../util\";\nimport { getRates } from \"../../util/coins\";\nimport { ACTIVE_CHAIN, APP_NAME } from \"../../util/constants\";\n\nimport \"./Invoice.css\";\n\nconst IMG_WIDTH = \"200px\";\n\nconst DEMO_NUMBER =\n  Date.now().toString(36) + Math.random().toString(36).substring(2);\n\n// github.com/sparksuite/simple-html-invoice-template\nfunction Invoice({\n  storeName,\n  address,\n  paymentAddress,\n  paid,\n  ref,\n  createdAt,\n  logoUrl,\n  pay,\n  items=[],\n  invoiceNumber=DEMO_NUMBER,\n}) {\n  const [rates, setRates] = useState()\n\n  const total = useMemo(() => items \n    .map((item) => item.usd * (item.quantity || 1))\n    .reduce(function (a, b) {\n      return a + b;\n    }, 0), [items])\n\n\n  async function fetchRates() {\n    try {\n      const {data} = await getRates()\n      setRates(data)\n      console.log('rates', data)\n    } catch (e) {\n      console.error('err getting rates', e)\n    }\n  }\n\n  useEffect(() => {\n    fetchRates() \n  }, [])\n\n  const amountString = `${formatMoney(total)} USD`\n  const ethString = rates && total*rates.MATIC\n\n  return (\n    <div className=\"invoice-box\" ref={ref}>\n      {/* <p>\n        <b>Transaction Complete! Please print this page.</b>\n      </p> */}\n      <table cellPadding=\"0\" cellSpacing=\"0\">\n        <tbody>\n          <tr className=\"top\">\n            <td colSpan=\"2\">\n              <table>\n                <tr>\n                  <td className=\"title\">\n                    <img\n                      src={logoUrl || logo}\n                      style={{ width: \"100%\", maxWidth: IMG_WIDTH }}\n                    />\n                  </td>\n\n                  <td>\n                    Purchase #:&nbsp;\n                    <Tooltip\n                      placement=\"top\"\n                      title={<span>{invoiceNumber}</span>}\n                    >\n                      {invoiceNumber.slice(0, 16)}\n                    </Tooltip>\n                    <br />\n                    Created:&nbsp;\n                    {getDateStringFromTimestamp(createdAt || Date.now(), true)}\n                    <br />\n                  </td>\n                </tr>\n              </table>\n            </td>\n          </tr>\n\n          <tr className=\"information\">\n            <td colSpan=\"2\">\n              <table>\n                <tr>\n                  <td>\n                    {storeName && <span><b>{storeName}</b><br/></span>}\n                    Fulfilled by {APP_NAME}, Inc.\n                    <br />\n                    {/* 12345 Sunny Road */}\n                  </td>\n\n                  <td>\n                    Your account: {abbreviate(address)}<br/>\n                    Payable to: {abbreviate(paymentAddress)}\n                  </td>\n                </tr>\n              </table>\n            </td>\n          </tr>\n\n    \n          <tr className=\"heading\">\n            <td>Item</td>\n            <td>Price</td>\n            <td>Quantity</td>\n          </tr>\n\n          {items.map(({ name: itemName, usd, quantity }, i) => (\n            <tr className=\"item\" key={i}>\n              <td>{itemName}</td>\n              <td>{formatMoney(usd)}</td>\n              <td>\n                {quantity}\n              </td>\n            </tr>\n          ))}\n\n          <br/>\n\n        <tr className=\"heading\">\n            <td>Payment Method</td>\n            <td>Check #</td>\n          </tr>\n\n          <tr className=\"details\">\n            <td>USD</td>\n\n            <td>\n              {/* {payId} */}\n              {amountString}<br/>\n              {ethString?.toFixed(4)} MATIC ({ACTIVE_CHAIN.name})\n            </td>\n          </tr>\n\n\n          <tr className=\"total\">\n            <td>\n              {/* <a href={url} target=\"_blank\">\n              View NFT\n            </a> */}\n              <br />\n              <br />\n              {!paid && <span>\n                <Button\n                  type=\"primary\"\n                  size=\"large\"\n                  className=\"standard-button\"\n                  onClick={() => pay(items, ethString)}\n                >\n                  Pay with wallet\n                </Button>\n              </span>}\n              {paid && <div>\n                <CheckCircleTwoTone twoToneColor=\"#00aa00\" />\n                  &nbsp;\n                  Paid\n              </div>}\n            </td>\n\n            <td>Total: {amountString}</td>\n          </tr>\n        </tbody>\n      </table>\n     \n    </div>\n  );\n}\n\nexport default Invoice;\n","import axios from \"axios\";\nimport { NFT_PORT_KEY } from \"./constants\";\n\nasync function loadImage(url) {\n  const config = { url, method: \"get\", responseType: \"blob\" }\n  const response = await axios.request(config)\n  return response.data // the blob\n}\n\nexport const createReceiptNft = async (\n  name,\n  description,\n  ownerAddress,\n  imageUrl\n) => {\n  if (!NFT_PORT_KEY) {\n    return {}\n  }\n  const params = {\n    chain: \"polygon\",\n    mint_to_address: ownerAddress,\n    description,\n    name,\n  };\n\n  const formData = new FormData();\n  // Default to celebration image nft\n  const url = imageUrl || 'https://upload.wikimedia.org/wikipedia/commons/c/c6/Celebration_fireworks.jpg'\n  \n  // https://stackoverflow.com/questions/6850276/how-to-convert-dataurl-to-file-object-in-javascript\n  const blob = await loadImage(url)\n  const file = new File([blob], \"receipt.jpg\", {\n    type: \"image/jpeg\",\n    lastModified: new Date(),\n  });\n  // const f = createJsonFile(data, \"metadata.json\");\n  formData.append(\"file\", file, file.name);\n\n  var options = {\n    method: \"POST\",\n    url: 'https://api.nftport.xyz/v0/files',\n    params,\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      Authorization: NFT_PORT_KEY,\n      \"content-type\":\n        \"multipart/form-data; boundary=---011000010111000001101001\",\n    },\n    data: formData,\n  };\n\n  return axios.request(options);\n};\n\nexport const getMintedNFT = (txHash) => {\n  var options = {\n    method: \"GET\",\n    url: \"https://api.nftport.xyz/v0/mints/\" + txHash,\n    params: { chain: \"polygon\" },\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: NFT_PORT_KEY,\n    },\n  };\n\n  return axios.request(options);\n};\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport { Button, Card, Col, Empty, Input, Modal, Result, Row, Spin, Tooltip } from \"antd\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMetadata, retrieveFiles } from \"../util/stor\";\nimport { formatMoney, getExplorerUrl, ipfsUrl, isEmpty } from \"../util\";\nimport { APP_NAME, DEMO_ITEMS } from \"../util/constants\";\nimport { completePurchase } from \"../contract/deploy\";\nimport { InfoCircleOutlined, MinusCircleFilled, PlusCircleFilled } from \"@ant-design/icons\";\nimport salespageLogo from '../assets/icon.png'\nimport Meta from \"antd/lib/card/Meta\";\nimport Invoice from \"./Invoice/Invoice\";\nimport { loadStream } from \"../util/ceramic\";\nimport { createReceiptNft } from \"../util/nftport\";\n\nfunction Salespage({ account, provider, login, logout }) {\n  const { pageId } = useParams(); // cid\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [cartItems, setCartItems] = useState({})\n  const [result, setResult] = useState();\n  const [modifierText, setModifierText] = useState()\n  const [activeItem, setActiveItem] = useState()\n  const [showInvoice, setShowInvoice] = useState()\n  const [error, setError] = useState()\n\n  const fetchData = async () => {\n    console.log(\"fetch\", pageId);\n    if (!pageId) {\n      return;\n    }\n\n    setLoading(true);\n    let res;\n\n    try {\n      // TODO: replace with ceramic stream id lookup.\n      res = await fetchMetadata(pageId);\n      const { streamId } = res.data\n\n      const streamData = await loadStream(streamId);\n      console.log(\"salespage request\", streamData);\n      setData({streamId, ...streamData})\n    } catch (e) {\n      console.error(e);\n      // alert(\"error getting salespage data\" + e);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateModifier = (item, modifier) => {\n    cartItems[item.name].modifier = modifier\n    setCartItems({...cartItems})\n    setActiveItem(undefined)\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [pageId]);\n\n  const { description, title, paymentAddress, address: contractAddress } = data;\n\n  const completePayment = async (itemsToPurchase, amountEth) => {\n    setError('')\n    if (!provider || !account) {\n      return await login(false)\n    }\n\n    console.log('completePayment', amountEth)\n    let nftResults = {};\n    let res;\n\n    setLoading(true);\n\n    try {\n      //   https://docs.nftport.xyz/docs/nftport/b3A6MjE2NjM5MDM-easy-minting-w-url\n\n      res = await completePurchase(provider, contractAddress, pageId, itemsToPurchase, amountEth);\n      nftResults = await createReceiptNft(\n        title,\n        description,\n        account,\n      );\n      res[\"receipt\"] = nftResults.data || {}\n      console.log('result', res)\n      setResult(res);\n      logout()\n    } catch (e) {\n      console.error(\"error checking out\", e);\n      // alert(\"Error completing salespage: \" + JSON.stringify(e));\n      setError(e.message || e.toString())\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const modifyQuantity = (item, amount) => {\n    if (!amount) {\n      return\n    }\n    const existing = cartItems[item.name]\n    if (!existing) {\n      item.quantity = 0\n      cartItems[item.name] = item\n    }\n    cartItems[item.name].quantity += amount\n    if (cartItems[item.name].quantity <= 0) {\n      delete cartItems[item.name]\n    }\n    setCartItems({...cartItems})\n  }\n\n  const items = useMemo(() => {\n    if (data.files) {\n      return data.files.map((name, i) => {\n        const d = data[name]\n        return {\n          ...d,\n          // TODO: get ipfs url\n          imgUrl: ipfsUrl(pageId, name)\n        }\n      })\n\n    }\n    return []// DEMO_ITEMS\n  }, [data]);\n\n  if (loading) {\n    return (\n      <div className=\"container\">\n        <Spin size=\"large\" />\n      </div>\n    );\n  }\n\n  const pageTitle = title || `${APP_NAME} checkout`;\n  const activeItems = Object.values(cartItems);\n  const noItems = isEmpty(activeItems);\n\n  if (showInvoice) {\n    return <div className=\"container boxed white\">\n      {result && <div>\n       <Result\n          status=\"success\" \n          title=\"Transaction complete!\" \n          subTitle=\"Present this page as proof of payment\"\n          extra={[\n            <Button href={getExplorerUrl(result?.hash, true)} type=\"primary\" key=\"console\">\n              View transaction\n            </Button>\n          ]}\n        >\n\n          \n          <p><b>Receipt NFT:</b> {JSON.stringify(result['receipt'], null, '\\t')}</p>\n        </Result>\n      </div>}\n    <Invoice \n        storeName={pageTitle}\n        address={account}\n        paymentAddress={paymentAddress}\n    paid={!!result} name={data.pageTitle} items={activeItems} pay={completePayment}/>\n    <br/>\n    {error && <p className=\"centered standard-button error-text\">Error completing purchase - {error}</p>}\n  </div>\n  }\n\n  return (<>\n      <div className=\"centered salespage-header\">\n          <img src={data.storeLogo || salespageLogo} className='page-logo'/>\n          <h2 className=\"centered\">{pageTitle}</h2>\n          <div>Purchase Page<br/>Add items to cart. Complete payment and get a proof of purchase receipt sent to your wallet.</div>\n      </div>\n\n    <div className=\"container boxed white\">\n      <Row>\n        <Col span={7}>\n          <Card title=\"Your items\">\n          {noItems && <Empty \n          image=\"https://cdn-icons-png.flaticon.com/512/34/34627.png\"\n          imageStyle={{\n            height: 60,\n          }}\n          description=\"No items in cart\">\n            Click an item on the right to get started!\n            </Empty>}\n          {activeItems.map((item, i) => {\n            return <div className=\"itemrow\">\n              {item.name}&nbsp;<Tooltip title=\"Add modifier to item\">\n                  <InfoCircleOutlined className=\"pointer\" onClick={() => setActiveItem(item)}/>\n                </Tooltip>\n              <span className=\"float-right bold\">\n              x{item.quantity}\n              </span>\n              {item.modifier && <span>\n                <br/>  \n                {item.modifier}\n              </span>}\n            </div>\n          })}\n            {!noItems && <div className=\"checkout-area\">\n            <Button className=\"standard-button\" type=\"primary\" onClick={() => setShowInvoice(true)}>Go to checkout</Button>\n          </div>}\n</Card>\n      \n        </Col>\n      <Col span={17}>\n      {items.map((item, i) => {\n        const imgUrl = item.imgUrl || \"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\";\n        return <Card\n        className=\"item-card\"\n        // style={{ width: 300 }}\n        cover={\n          <img\n            className=\"item-card-image\"\n            alt={item.name}\n            src={imgUrl}\n          />\n        }\n        actions={[\n          <MinusCircleFilled key=\"minus\" onClick={() => modifyQuantity(item, -1)} />,\n          <PlusCircleFilled key=\"plus\" onClick={() => modifyQuantity(item, 1)} />,\n        ]}\n      >\n        <Meta\n          title={item.name || 'Item title'}\n          description={`${item.description || 'No description'}. ${formatMoney(item.usd)}`}\n        />\n      </Card>\n      })}\n\n      </Col>\n      </Row>\n\n      <Modal title={\"Add modifier to \" + activeItem?.name} visible={!!activeItem} okText=\"Save\" onCancel={() => setActiveItem(undefined)} onOk={() => updateModifier(activeItem, modifierText)}>\n        <Input\n          value={modifierText}\n          prefix={'Add request: '}\n          onChange={e => setModifierText(e.target.value)}\n          />\n      </Modal>\n    </div>\n  </>\n  );\n}\n\nSalespage.propTypes = {};\n\nexport default Salespage;\n","import React, { useEffect, useState } from \"react\";\n\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\n\nimport Home from \"./components/Home\";\nimport CreateSalespage from \"./components/CreateSalespage\";\nimport { Layout, Menu, Breadcrumb, Button } from \"antd\";\nimport { ACTIVE_CHAIN, APP_DESC, APP_NAME, CONNECT_PROMPT } from \"./util/constants\";\nimport History from \"./components/History\";\nimport logo from \"./assets/logo.png\";\n\nimport \"./App.css\";\nimport { web3ModalSetup } from \"./util/web3util\";\nimport Salespage from \"./components/Salespage\";\nimport { ethers } from \"ethers\";\nimport { abbreviate } from \"./util\";\nimport { initCeramic } from \"./util/ceramic\";\n\nconst { Header, Content, Footer } = Layout;\n\nexport const web3Modal = web3ModalSetup()\n\nfunction App() {\n  const [account, setAccount] = useState();\n  const [provider, setProvider] = useState();\n  const [loading ,setLoading] = useState(false);\n\n  async function login(checkOnInit) {\n    if (checkOnInit && !web3Modal.cachedProvider) {\n      // Don't force login if no cached provider.\n      return\n    }\n    try {\n      const instance = await web3Modal.connect();\n      const p = new ethers.providers.Web3Provider(instance);\n      setProvider(p)\n      const accounts = await p.listAccounts()\n      const addr = accounts[0]\n      setAccount(addr)\n      await initCeramic(addr)\n    }  catch (e) {\n      console.error('login error', e)\n      alert(e)\n    }\n  }\n\n  const logout = () => {\n    web3Modal.clearCachedProvider()\n    setAccount(undefined)\n    setProvider(undefined)\n  }\n\n  useEffect(() => {\n    login(true)\n  }, [])\n\n  const navigate = useNavigate();\n  const path = window.location.href;\n\n  const isCheckout = path.indexOf(\"/page/\") !== -1;\n  console.log('checkout', path, isCheckout)\n\n  return (\n    <div className=\"App\">\n      <Layout className=\"layout\">\n        {!isCheckout && <Header>\n          {/* <div className=\"logo\" /> */}\n          <Menu\n            // theme=\"dark\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={[]}\n          >\n            <Menu.Item key={0}>\n              <img\n                src={logo}\n                className=\"header-logo pointer\"\n                onClick={() => navigate(\"/\")}\n              />\n            </Menu.Item>\n\n            {!isCheckout && (\n              <>\n                <Menu.Item key={1} onClick={() => navigate(\"/create\")}>\n                  Create salespage request\n                </Menu.Item>\n                <Menu.Item key={2} onClick={() => navigate(\"/history\")}>\n                  View Transactions\n                </Menu.Item>\n              </>\n            )}\n            {!account && <span>\n              <Button type=\"primary\" onClick={() => login(false)}  loading={loading} disabled={loading}>{CONNECT_PROMPT}</Button>\n            </span> }\n            {account && <span><b>\n              Hello: {abbreviate(account)}</b>&nbsp;(<a href=\"#\" onClick={e => {\n                e.preventDefault()\n                logout()\n              }}>logout</a>)</span>}\n          &nbsp;\n          <Menu.Item>\n            <b>Network: {ACTIVE_CHAIN.name}</b>\n            </Menu.Item>\n          </Menu>\n        </Header>}\n        <Content style={{ padding: \"0 50px\" }}>\n          <div className={`${!isCheckout ? \"container\" : \"\"}`}>\n            <Routes>\n              <Route path=\"/\" element={<Home account={account} />} />\n              <Route path=\"/page/:pageId\" element={<Salespage logout={logout} login={login} provider={provider} account={account} />} />\n              <Route path=\"/#/page/:pageId\" element={<Salespage logout={logout} login={login} provider={provider} account={account} />} />\n              <Route path=\"/create\" element={<CreateSalespage provider={provider} account={account}/>} />\n              <Route path=\"/#/create\" element={<CreateSalespage provider={provider} account={account}/>} />\n              <Route path=\"/history\" element={<History />} />\n              <Route path=\"/#/history\" element={<History />} />\n            </Routes>\n          </div>\n        </Content>\n        <Footer style={{ textAlign: \"center\" }}>\n          {APP_NAME} ©2022 - {APP_DESC}\n        </Footer>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}